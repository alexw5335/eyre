FLD
FST
FSTP
FXCH
FCMOVcc
FILD
FIST
FISTP
FBLD
FBSTP
FLDZ
FLD1
FLDPI
FLDL2T
FLDL2E
FLDLG2
FLDLN2
FADD/FADDP/FIADD
FSUB/FSUBP/FISUB
FSUBR/FSUBRP/FISUBR
FMUL/FMULP/FIMUL
FDIV/FDIVP/FIDIV
FDIVR/FDIVRP/FIDIVR
FABS
FCHS
FSQRT
FPREM
FPREM1
FRNDINT
FXTRACT
FCOM/FCOMP/FCOMPP
FUCOM/FUCOMP/FUCOMPP
FICOM/FICOMP
FCOMI/FCOMIP
FUCOMI/FUCOMIP
FTST
FXAM
FSIN
FCOS
FSINCOS
FPTAN
FPATAN
FYL2X
FYL2XP1
F2XM1
FSCALE
FINIT/FNINIT
FLDCW
FSTCW/FNSTCW
FSTSW/FNSTSW
FCLEX/FNCLEX
FLDENV
FSTENV/FNSTENV
FRSTOR
FSAVE/FNSAVE
FINCSTP
FDECSTP
FFREE
FNOP
FISTTP


F0D9  F2XM1
D9/4  FLDENV  M1428BYTE
D9/5  FLDCW   M2BYTE
E8D9  FLD1
D9D9  FLSL2T
EAD9  FLDL2E
EBD9  FLDPI
ECD9  FLDLG2
EDD9  FLDLN2
EED9  FLDZ
D9/0  FLD   M32
DD/0  FLD   M64
DB/5  FLD   M80
C0D9  FLD   STI




FLD
FST
FSTP
FXCH
FCMOVB
FCMOVE
FCMOVBE
FCMOVU
FCMOVNB
FCMOVNE
FCMOVNBE
FCMOVNU
FILD
FIST
FISTP
FBLD
FBSTP
FLDZ
FLD1
FLDPI
FLDL2T
FLDL2E
FLDLG2
FLDLN2
FADD
FADDP
FIADD
FSUB
FSUBP
FISUB
FSUBR
FSUBRP
FISUBR
FMUL
FMULP
FIMUL
FDIV
FDIVP
FIDIV
FDIVR
FDIVRP
FIDIVR
FABS
FCHS
FSQRT
FPREM
FPREM1
FRNDINT
FXTRACT
FCOM
FCOMP
FCOMPP
FUCOM
FUCOMP
FUCOMPP
FICOM
FICOMP
FCOMI
FCOMIP
FUCOMI
FUCOMIP
FTST
FXAM
FSIN
FCOS
FSINCOS
FPTAN
FPATAN
FYL2X
FYL2XP1
F2XM1
FSCALE
FINIT
FNINIT
FLDCW
FSTCW
FNSTCW
FSTSW
FNSTSW
FCLEX
FNCLEX
FLDENV
FSTENV
FNSTENV
FRSTOR
FSAVE
FNSAVE
FINCSTP
FDECSTP
FFREE
FNOP
FISTTP



fld
fst
fstp
fxch
fcmovb
fcmove
fcmovbe
fcmovu
fcmovnb
fcmovne
fcmovnbe
fcmovnu
fild
fist
fistp
fbld
fbstp
fldz
fld1
fldpi
fldl2t
fldl2e
fldlg2
fldln2
fadd
faddp
fiadd
fsub
fsubp
fisub
fsubr
fsubrp
fisubr
fmul
fmulp
fimul
fdiv
fdivp
fidiv
fdivr
fdivrp
fidivr
fabs
fchs
fsqrt
fprem
fprem1
frndint
fxtract
fcom
fcomp
fcompp
fucom
fucomp
fucompp
ficom
ficomp
fcomi
fcomip
fucomi
fucomip
ftst
fxam
fsin
fcos
fsincos
fptan
fpatan
fyl2x
fyl2xp1
f2xm1
fscale
finit
fninit
fldcw
fstcw
fnstcw
fstsw
fnstsw
fclex
fnclex
fldenv
fstenv
fnstenv
frstor
fsave
fnsave
fincstp
fdecstp
ffree
fnop
fisttp

0F 10  MOVUPS  XMM, XMM/M128
0F 11  MOVUPS  XMM/M128, XMM
VEX.128.0F.WIG  10  VMOVUPS  XMM, XMM/M128
VEX.128.0F.WIG  11  VMOVUPS  XMM/M128, XMM
VEX.256.0F.WIG  10  VMOVUPS  YMM, YMM/M256
VEX.256.0F.WIG  11  VMOVUPS  YMM/M256, YMM
EVEX.128.0F.W0  10  VMOVUPS  XMM {k} {z}, XMM/M128
EVEX.256.0F.W0  10  VMOVUPS  YMM {k} {z}, YMM/M256
EVEX.512.0F.W0  10  VMOVUPS  ZMM {k} {z}, ZMM/M512
EVEX.128.0F.W0  11  VMOVUPS  XMM/128 {k} {z}, XMM
EVEX.256.0F.W0  11  VMOVUPS  YMM/256 {k} {z}, YMM
EVEX.512.0F.W0  11  VMOVUPS  ZMM/512 {k} {z}, ZMM

66 0F 10  MOVUPD  XMM, XMM/M128
66 0F 11  MOVUPD  XMM/M128, XMM
VEX.128.66.0F.WIG  10  VMOVUPD  XMM, XMM/M128
VEX.128.66.0F.WIG  11  VMOVUPD  XMM/M128, XMM
VEX.256.66.0F.WIG  10  VMOVUPD  YMM, YMM/M256
VEX.256.66.0F.WIG  11  VMOVUPD  YMM/M256, YMM
EVEX.128.66.0F.W0  10  VMOVUPD  XMM {k} {z}, XMM/M128
EVEX.256.66.0F.W0  10  VMOVUPD  YMM {k} {z}, YMM/M256
EVEX.512.66.0F.W0  10  VMOVUPD  ZMM {k} {z}, ZMM/M512
EVEX.128.66.0F.W0  11  VMOVUPD  XMM/128 {k} {z}, XMM
EVEX.256.66.0F.W0  11  VMOVUPD  YMM/256 {k} {z}, YMM
EVEX.512.66.0F.W0  11  VMOVUPD  ZMM/512 {k} {z}, ZMM

F3 0F 10  MOVSS  XMM, XMM/M32  (reg, rm)
F3 0F 11  MOVSS  XMM/M32, XMM  (rm, reg)
VEX.LIG.F3.0F.WIG  10  VMOVSS  XMM, XMM, XMM  (reg, vvvv, rm)
VEX.LIG.F3.0F.WIG  10  VMOVSS  XMM, M32       (reg, rm)
VEX.LIG.F3.0F.WIG  11  VMOVSS  XMM, XMM, XMM  (rm, vvvv, reg)
VEX.LIG.F3.0F.WIG  11  VMOVSS  M32, XMM       (rm, reg)
EVEX.LLIG.F3.0F.W0  10  VMOVSS  XMM {kz}, XMM, XMM  (reg, vvvv, rm)
EVEX.LLIG.F3.0F.W0  10  VMOVSS  XMM {kz}, M32       (reg, rm)  (Tuple1 Scalar)
EVEX.LLIG.F3.0F.W0  11  VMOVSS  XMM {kz}, XMM, XMM  (rm, vvvv, reg)
EVEX.LLIG.F3.0F.W0  11  VMOVSS  M32 {k}, XMM        (rm, reg)  (Tuple1 Scalar)


F2 0F 10  MOVSD  XMM, XMM/M64
F2 0F 11  MOVSD  XMM/M64, XMM
VEX.LIG.F2.0F.WIG  10  VMOVSD  XMM, XMM, XMM  (reg, vvvv, rm)
VEX.LIG.F2.0F.WIG  10  VMOVSD  XMM, M64       (reg, rm)
VEX.LIG.F2.0F.WIG  11  VMOVSD  XMM, XMM, XMM  (rm, vvvv, reg)
VEX.LIG.F2.0F.WIG  11  VMOVSD  M64, XMM       (rm, reg)
EVEX.LLIG.F2.0F.W1  10  VMOVSD  XMM {kz}, XMM, XMM  (reg, vvvv, rm)
EVEX.LLIG.F2.0F.W1  10  VMOVSD  XMM {kz}, M64       (reg, rm)  (Type1 Scalar)
EVEX.LLIG.F2.0F.W1  11  VMOVSD  XMM {kz}, XMM, XMM  (rm, vvvv, reg)
EVEX.LLIG.F2.0F.W1  11  VMOVSD  M64 {k}, XMM        (rm, reg)  (Tuple1 Scalar)



Operands:
S:
	- XMM
	- YMM
	- ZMM
SM:
	- XMM/M128
	- YMM/M256
	- ZMM/M512
SMM32BCSTER:
	- XMM/M128/M32BCST {er}
	- YMM/M256/M32BCST {er}
	- ZMM/M512/M32BCST {er}
SMM64BCSTER:
    - XMM/M128/M64BCST {er}
    - YMM/M256/M64BCST {er}
    - ZMM/M512/M64BCST {er}

Opcode:
L: Indicates that L and L' should be chosen based on width of 'S' operands

14    ADC  A_I    1111
80/2  ADC  RM_I   1111
83/2  ADC  RM_I8  0111
10    ADC  RM_R   1111
12    ADC  R_RM   1111

66 0F 38 F6  ADCX  R_RM 1100

04    ADD  A_I    1111
80/0  ADD  RM_I   1111
83/0  ADD  RM_I8  0111
00    ADD  RM_R   1111
02    ADD  R_RM   1111

66 0F 58  ADDPD  X_XM  (reg, rm)
VEX.L.66.0F.WIG  58  VADDPD  S_S_SM         (reg, vvvv, rm)
EVEX.L.66.0F.W1  58  VADDPD  S_S_SMM64BCST  (reg, vvvv, rm, FULL)

0F 58  ADDPS  X_XM  (reg, rm)
VEX.L.0F.WIG  58  VADDPS  S_S_SM  (reg, vvvv, rm)
EVEX.L.0F.W0  58  VADDPS  S_S_SMM32BCST