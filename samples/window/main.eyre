namespace main



var cursor: qword
var className db "MyClass"
var hwnd: qword
var windowName db "MyWindow"
var msg: winapi.Message
var class: winapi.WndClassA
var paintStruct: winapi.PaintStruct



proc createCursor(40) {
	xor ecx, ecx
	mov edx, winapi.Cursor.ARROW
	dllcall LoadCursorA
	cmp rax, 0
	je fatal
	mov [cursor], rax
}



proc fatal(40) {
	var string db "Fatal error\0"
	lea rcx, [string]
	dllcall printf
	dllcall ExitProcess
}



proc exit(40) {
	var string db "Finished\0"
	lea rcx, [string]
	dllcall printf
	dllcall ExitProcess
}



proc wndProc(40) {
	cmp edx, winapi.MsgType.DESTROY
	je destroy
	cmp edx, winapi.MsgType.PAINT
	je paint
	dllcall DefWindowProcA
	return
destroy:
	xor ecx, ecx
	dllcall PostQuitMessage
	return
paint:
	mov rcx, [hwnd]
	lea rdx, [paintStruct]
	dllcall BeginPaint
	mov rcx, rax
	lea rdx, [paintStruct.rect.left]
	mov r8d, winapi.Colour.WINDOW + 1
	dllcall FillRect
	lea rdx, [paintStruct]
	dllcall EndPaint
	return
}



proc createClass(40) {
	lea rax, [className]
	mov [class.className], rax
	lea rax, [wndProc]
	mov [class.wndProc], rax
	mov rax, [cursor]
	mov [class.hCursor], rax
	lea rcx, [class]
	dllcall RegisterClassA
	cmp rax, 0
	je fatal
}



proc createWindow(32 + 64 + 8) {
	xor ecx, ecx
	lea rdx, [className]
	lea r8, [windowName]
	mov r9d, winapi.WindowStyle.OVERLAPPEDWINDOW
    mov qword [rsp + 32 + 56], 0
    mov qword [rsp + 32 + 48], 0
    mov qword [rsp + 32 + 40], 0
    mov qword [rsp + 32 + 32], 0
    mov qword [rsp + 32 + 24], 600
    mov qword [rsp + 32 + 16], 600
    mov qword [rsp + 32 + 8], 0
    mov qword [rsp + 32 + 0], 0
    dllcall CreateWindowExA
    mov [hwnd], rax
    cmp rax, 0
    je fatal
}



proc showWindow(40) {
	mov rcx, [hwnd]
	mov edx, 1
	dllcall ShowWindow
}



proc windowCycle(40) {
loop:
	lea rcx, [msg]
	xor edx, edx
	xor r8, r8
	xor r9, r9
	dllcall GetMessageA
	cmp rax, 0
	je end
	lea rcx, [msg]
	dllcall TranslateMessage
	lea rcx, [msg]
	dllcall DispatchMessageA
	jmp loop
end:
}



proc main(40) {
	call createCursor
	call createClass
	call createWindow
	call showWindow
	call windowCycle
	call exit
}

